package org.bjb;public class KORookieStrategy extends Strategy implements UnbalancedStrategy {	private int rc;						// running count	private int keyCount;				// key count	private int decks = 0;				// decks for count	private int multiplier = 3;			// bet increase for better than key count	private int betUnit = 10;	protected int lastTopCard = 0;		// track deck top card for shuffle check		public String getName() { return "K-O Rookie"; }	public boolean isBalanced() { return false; }	public boolean insure(Deck d) { return false; }		public int getBet() {		if (rc > keyCount) return betUnit * multiplier;		return betUnit;	}	public void updateCount(Deck d,Card c) { 		if (d.topCard < lastTopCard) {		// must of been shuffled			rc = 0;		}		else lastTopCard = d.topCard;		// save current		if (decks == 0 || decks != (d.cards.length / 52)) {		// If not set or changed			decks = d.cards.length / 52;			switch (decks) {				case 1:					rc = 0;					keyCount = 2;					break;				case 2:					rc = -4;					keyCount = 1;					break;				case 6:					rc = -20;					keyCount = -4;					break;				case 8:					rc = -28;					keyCount = -6;					break;				default:					break;			}			}		else if (decks != d.cards.length / 52) 			throw new IllegalStateException("KORookieStrategy: deck # changed. Was " + decks + " is now " + (d.cards.length / 52));		if (d.topCard < lastTopCard) {		// must of been shuffled			rc = 0;		}		else lastTopCard = d.topCard;		// save current		int v = c.iValue;		if (v >= 2 && v <= 7) rc += 1;		if (v == 10 | v == 1) rc -= 1;	}	public int getCount() { return rc; }	public int getInitialRunningCount() {		int irc = -99;		// If you see this we have a bug		switch (decks) {			case 1:				irc = 0;				break;			case 2:				irc = -4;				break;			case 4:				break;		// TODO need this handled			case 6:				irc = -20;				break;			case 8:				irc = -28;				break;			default:				irc = -28;				break;		}			return irc;	}		public int getKeyCount() {		int kc = -99;			// If you see this we have a bug		switch (decks) {			case 1:				kc = 2;				break;			case 2:				kc = 1;				break;			case 4:				break;		// TODO need this handled			case 6:				kc = -4;				break;			case 8:				kc = -6;				break;			default:				kc = -6;				break;		}			return kc;	}	// supported charts	protected boolean isSurrenderChart() { return false; }	protected boolean isSplitChart() { return false; }	protected boolean isDoubleChart() { return false; }	protected boolean isSoftChart() { return false; }}