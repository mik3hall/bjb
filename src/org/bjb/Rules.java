package org.bjb;import java.util.HashMap;public class Rules {	// Hit soft 17 (S17 is stand on soft 17)	private boolean h17 = true;		private boolean das = false;		// Double after split		private int[] dds;					// Array of double down allowed values		private boolean resplit = true;		private boolean drawToSplitAces = false; 		private boolean insurance = false;  // Insurance allowed		private boolean surrender = false;	// Surrender allowed		private static final HashMap<String,Rules> cache = new HashMap<String,Rules>();		public Rules(boolean h17,boolean das,boolean insurance,boolean surrender,boolean resplit,boolean drawToSplitAces) {		this.h17 = h17;		this.das = das;		this.dds = new int[0];		this.insurance = insurance;		this.surrender = surrender;		this.resplit = resplit;		this.drawToSplitAces = false;	}		public Rules(boolean h17,boolean das,boolean insurance,boolean surrender, boolean resplit,boolean drawToSplitAces,int[] dds) {				this(true,false,false,false,true,false);		this.dds = dds;	}		public static Rules getInstance(String name) {		Rules rules = cache.get(name);		if (rules != null) return rules;		if (name.equals("Downtown Las Vegas")) 			rules = new Rules(true,false,true,false,true,false);		else if (name.equals("Las Vegas Strip")) 			rules = new Rules(false,false,true,false,true,false);		else if (name.equals("Reno"))			rules = new Rules(true,false,true,false,true,false,new int[] { 9,10,11 });		else if (name.equals("Atlantic City"))			rules = new Rules(true,true,true,true,false,false);		cache.put(name,rules);		return rules;	}		public Rules(boolean h17) {		this.h17 = h17;	}		public Rules(boolean h17,boolean das) {		this.h17 = h17;		this.das = das;	}		public void setH17(boolean h17) {		this.h17 = h17;	}		public boolean isH17() {		return h17;	}		// Double after split allowed	public void setDAS(boolean das) {		this.das = das;	}		public boolean isDAS() { 		return das;	}		public int[] getDDs() { return dds; }		// Double on any two cards	public void setDDs(int[] dds) {		this.dds = dds;	}		public boolean canDouble(int v) {		if (dds.length == 0) return true;		for (int dd : dds)			if (dd == v) return true;		return false;	}		public boolean isDrawToSplitAces() { return drawToSplitAces; }		public void setDrawToSplitAces(boolean drawToSplitAces) {		this.drawToSplitAces = drawToSplitAces;	}		public void setResplit(boolean resplit) {		this.resplit = resplit;	}		public boolean isResplit() { return resplit; }		public void setInsurance(boolean insurance) {		this.insurance = insurance;	}		public boolean isInsurance() {		return insurance;	}		public void setSurrender(boolean surrender) {		this.surrender = surrender;	}		public boolean isSurrender() { return surrender; }}