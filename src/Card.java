package org.bjb;import java.io.*;import javax.swing.ImageIcon;class Card {	// Variable declarations	int iValue;	// Numeric vlaue corresponding to card.	String value;	// "A" "2" through "8" "T" "J" "Q" "K"	String suit;	// "S" "H" "C" "D"	ImageIcon imgico = null;		// Method declarations	public Card(int n) {		// Constructor		int iSuit = n/13;		iValue = n%13+1;		switch(iSuit) {			case 0:				suit = "s";				break;			case 1:				suit = "h";				break;			case 2:				suit = "c";				break;			default:				suit = "d";		}		if (iValue == 1) value = "1";//		else if (iValue == 10) value = "Ten";		else if (iValue == 11) value = "j";		else if (iValue == 12) value = "q";		else if (iValue == 13) value = "k";		else value = Integer.toString(iValue);		if (iValue>10) iValue = 10;		String cardpng = new StringBuffer("images/").append(suit).append(value).append(".png").toString();		imgico = getIcon(cardpng);	}		int getValue() {		return iValue;	}		public String toString() {		return new StringBuffer(value).append("-").append(suit).append("=").append(iValue).toString();	}		public static ImageIcon getIcon(String icon) {		try {			InputStream	is = BlackJackApp.class.getResourceAsStream(icon);			ByteArrayOutputStream baos = new ByteArrayOutputStream();			BufferedOutputStream bos = new BufferedOutputStream(baos);			BufferedInputStream bis = new BufferedInputStream(is);			byte [] buf = new byte[1024];			int cnt = bis.read(buf,0,buf.length);			while (cnt > -1) {				bos.write(buf,0,cnt);				cnt = bis.read(buf,0,buf.length);			}			bis.close();			bos.flush();			bos.close();			byte[] img = baos.toByteArray();			return new ImageIcon(img,icon);		}		catch(IOException ioex) { ioex.printStackTrace(); }		return null;	}}		// End of Card class