package org.bjb;import java.awt.*;import java.awt.event.*;import javax.swing.*;import java.awt.geom.Point2D;import java.awt.geom.RoundRectangle2D;class BalanceViewer implements ActionListener {	int x=0,y=0;	Player p = null;	JPanel playingArea = null;	private static final Color flashColor = new Color(0x0033FF00);	private Color currentColor = Color.yellow;	private int flashCount = 0;	private javax.swing.Timer timer = null;	private RoundRectangle2D.Float back;		public BalanceViewer(Player p,int x,int y,JPanel playingArea) {		this.p = p;		this.x = x;		this.y = y;		this.playingArea = playingArea;	}		public void show(int balance) {		update(p.getBalance(),Color.yellow);	}		public void setCurrent(boolean current) {		if (current) flash();		else if (timer != null) {			timer.stop();			timer = null;			update(p.getBalance(),Color.yellow);		}	}		private void flash() {		currentColor = flashColor;		update(p.getBalance(),currentColor);		timer = new javax.swing.Timer(80,this);		timer.start();	}				public void actionPerformed(ActionEvent evt) {		if (currentColor.equals(Color.yellow)) 			currentColor = flashColor;		else currentColor = Color.yellow;		update(p.getBalance(),currentColor);		if (flashCount == 6) {			flashCount = 0;			timer.stop();			update(p.getBalance(),flashColor);		}		else flashCount++;		}		public boolean contains(Point2D p) {		if (back != null)			return back.contains(p);		return false;	}		private void update(int balance,Color c) {		Graphics2D g2d = (Graphics2D)playingArea.getGraphics();		g2d.setColor(((PlayingArea)playingArea).lightGreen);		g2d.fillRect(this.x,this.y-31,71,30);		String s = null;		if (balance > 0)			s = new StringBuffer("+$").append(new Integer(balance).toString()).toString();		else 			s = new StringBuffer("-$").append(new Integer(balance).toString()).toString();  		Font f = g2d.getFont();  		f = f.deriveFont(14f);  		g2d.setFont(f);  		FontMetrics fm = g2d.getFontMetrics(f);  		int line_height = fm.getHeight();  		int line_width = fm.stringWidth(s);  		int x = this.x + 8;  		int y = this.y - (line_height+10);        back = new RoundRectangle2D.Float( x-2, y-2, line_width+8, line_height+8, 15, 15);        g2d.setColor(Color.green);        g2d.fill(back);		RoundRectangle2D.Float roundedRectangle = new RoundRectangle2D.Float(x, y, line_width+4, line_height+4, 15, 15);        g2d.setColor(c);        g2d.fill(roundedRectangle);        if (balance > 0) g2d.setColor(Color.black);        else g2d.setColor(Color.red);   		g2d.drawString(s,x,y+line_height);  	}}